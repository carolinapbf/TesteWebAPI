<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.5 on darwin)" generated="20200112 21:58:30.688" rpa="false">
<suite id="s1" name="APIUser" source="/Users/pedroh/Documents/TesteWebAPI-master/API/User/APIUser.robot">
<kw name="Acess API Test" library="ResourceUser" type="setup">
<kw name="Create Session" library="ExtendedRequestsLibrary">
<doc>Create and return a HTTP session object to a server.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>${URL_API}</arg>
</arguments>
<msg timestamp="20200112 21:58:30.982" level="INFO">Creating Session using : alias=apiTeste, url=https://fakerestapi.azurewebsites.net/api/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200112 21:58:30.982" endtime="20200112 21:58:30.983"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:30.981" endtime="20200112 21:58:30.983"></status>
</kw>
<test id="s1-t1" name="Scenario 1: Request to list all users (GET)">
<kw name="Given I do a request to list all the users" library="ResourceUser">
<kw name="Get Request" library="ExtendedRequestsLibrary">
<doc>Send a GET request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Users</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:58:32.325" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:58:30.986" endtime="20200112 21:58:32.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:58:32.326" level="INFO">[{"ID":1,"UserName":"User 1","Password":"Password1"},{"ID":2,"UserName":"User 2","Password":"Password2"},{"ID":3,"UserName":"User 3","Password":"Password3"},{"ID":4,"UserName":"User 4","Password":"Password4"},{"ID":5,"UserName":"User 5","Password":"Password5"},{"ID":6,"UserName":"User 6","Password":"Password6"},{"ID":7,"UserName":"User 7","Password":"Password7"},{"ID":8,"UserName":"User 8","Password":"Password8"},{"ID":9,"UserName":"User 9","Password":"Password9"},{"ID":10,"UserName":"User 10","Password":"Password10"}]</msg>
<status status="PASS" starttime="20200112 21:58:32.326" endtime="20200112 21:58:32.327"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:58:32.328" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:58:32.327" endtime="20200112 21:58:32.328"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:30.985" endtime="20200112 21:58:32.328"></status>
</kw>
<kw name="When checking status code" library="ResourceUser">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:58:32.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:58:32.330" endtime="20200112 21:58:32.331"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.329" endtime="20200112 21:58:32.331"></status>
</kw>
<kw name="And check reason" library="ResourceUser">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:32.332" endtime="20200112 21:58:32.333"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.331" endtime="20200112 21:58:32.334"></status>
</kw>
<kw name="Then verifies that the request returns a list of &quot;10&quot; users" library="ResourceUser">
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>${NUMBER_OF_ENDPOINT}</arg>
</arguments>
<msg timestamp="20200112 21:58:32.336" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20200112 21:58:32.335" endtime="20200112 21:58:32.337"></status>
</kw>
<kw name="List Should Not Contain Duplicates" library="Collections">
<doc>Fails if any element in the ``list`` is found from it more than once.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:32.337" endtime="20200112 21:58:32.338"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.334" endtime="20200112 21:58:32.338"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:30.984" endtime="20200112 21:58:32.338" critical="yes"></status>
</test>
<test id="s1-t2" name="Scenario 2: Registration of new user (POST)">
<kw name="Given I do the registration request from a new user" library="ResourceUser">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>content-type=application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20200112 21:58:32.343" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20200112 21:58:32.341" endtime="20200112 21:58:32.343"></status>
</kw>
<kw name="Post Request" library="ExtendedRequestsLibrary">
<doc>Send a POST request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Users</arg>
<arg>data={"ID": 11,"UserName": "user","Password": "senha"}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:58:32.568" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:58:32.343" endtime="20200112 21:58:32.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:58:32.569" level="INFO">{"ID":11,"UserName":"user","Password":"senha"}</msg>
<status status="PASS" starttime="20200112 21:58:32.568" endtime="20200112 21:58:32.569"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:58:32.570" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:58:32.570" endtime="20200112 21:58:32.570"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.341" endtime="20200112 21:58:32.571"></status>
</kw>
<kw name="When checking status code" library="ResourceUser">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:58:32.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:58:32.572" endtime="20200112 21:58:32.573"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.571" endtime="20200112 21:58:32.573"></status>
</kw>
<kw name="And check reason" library="ResourceUser">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:32.575" endtime="20200112 21:58:32.576"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.574" endtime="20200112 21:58:32.576"></status>
</kw>
<kw name="Then check if the user is with all registered data" library="ResourceUser">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>11</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:32.577" endtime="20200112 21:58:32.578"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>UserName</arg>
<arg>user</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:32.578" endtime="20200112 21:58:32.579"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Password</arg>
<arg>senha</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:32.579" endtime="20200112 21:58:32.580"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.576" endtime="20200112 21:58:32.581"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.339" endtime="20200112 21:58:32.581" critical="yes"></status>
</test>
<test id="s1-t3" name="Scenario 3: Delete a user (DELETE)">
<kw name="Given I delete the user &quot;10&quot;" library="ResourceUser">
<kw name="Delete Request" library="ExtendedRequestsLibrary">
<doc>Send a DELETE request on the session object found in the cache using the given
``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Users/${ENDPOINT_ID}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:58:32.818" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:58:32.583" endtime="20200112 21:58:32.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:58:32.819" level="INFO"></msg>
<status status="PASS" starttime="20200112 21:58:32.818" endtime="20200112 21:58:32.819"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:58:32.820" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:58:32.819" endtime="20200112 21:58:32.820"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.583" endtime="20200112 21:58:32.820"></status>
</kw>
<kw name="When checking status code" library="ResourceUser">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:58:32.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:58:32.821" endtime="20200112 21:58:32.823"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.820" endtime="20200112 21:58:32.823"></status>
</kw>
<kw name="And check reason" library="ResourceUser">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:32.824" endtime="20200112 21:58:32.825"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.823" endtime="20200112 21:58:32.826"></status>
</kw>
<kw name="Then check if the response body is empty" library="ResourceUser">
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${RESPONSE.content}</arg>
</arguments>
<msg timestamp="20200112 21:58:32.828" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20200112 21:58:32.827" endtime="20200112 21:58:32.828"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.826" endtime="20200112 21:58:32.828"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.582" endtime="20200112 21:58:32.829" critical="yes"></status>
</test>
<test id="s1-t4" name="Scenario 4 : Request a specific user (GET[ID])">
<kw name="Given I do a request to return the user &quot;5&quot;" library="ResourceUser">
<kw name="Get Request" library="ExtendedRequestsLibrary">
<doc>Send a GET request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Users/${ENDPOINT_DELETE}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:58:33.075" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:58:32.831" endtime="20200112 21:58:33.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:58:33.077" level="INFO">{"ID":5,"UserName":"User 5","Password":"Password5"}</msg>
<status status="PASS" starttime="20200112 21:58:33.076" endtime="20200112 21:58:33.077"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:58:33.078" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:58:33.077" endtime="20200112 21:58:33.078"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.830" endtime="20200112 21:58:33.079"></status>
</kw>
<kw name="When checking status code" library="ResourceUser">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:58:33.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:58:33.080" endtime="20200112 21:58:33.081"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:33.079" endtime="20200112 21:58:33.081"></status>
</kw>
<kw name="And check reason" library="ResourceUser">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:33.083" endtime="20200112 21:58:33.084"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:33.082" endtime="20200112 21:58:33.084"></status>
</kw>
<kw name="Then check if the request returns all data correctly" library="ResourceUser">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>5</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:33.085" endtime="20200112 21:58:33.086"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>UserName</arg>
<arg>User 5</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:33.086" endtime="20200112 21:58:33.087"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Password</arg>
<arg>Password5</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:33.087" endtime="20200112 21:58:33.088"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:33.084" endtime="20200112 21:58:33.089"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:32.829" endtime="20200112 21:58:33.089" critical="yes"></status>
</test>
<test id="s1-t5" name="Scenario 5: Update or modify user data (PUT)">
<kw name="Given I request user data change &quot;1&quot;" library="ResourceUser">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>content-type=application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20200112 21:58:33.092" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20200112 21:58:33.092" endtime="20200112 21:58:33.092"></status>
</kw>
<kw name="Post Request" library="ExtendedRequestsLibrary">
<doc>Send a POST request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Users/${ENDPOINT_PUT}</arg>
<arg>data={"ID": 1,"UserName": "user","Password": "senha"}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:58:33.322" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:58:33.093" endtime="20200112 21:58:33.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:58:33.324" level="INFO">{"ID":1,"UserName":"user","Password":"senha"}</msg>
<status status="PASS" starttime="20200112 21:58:33.323" endtime="20200112 21:58:33.324"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:58:33.326" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:58:33.325" endtime="20200112 21:58:33.326"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:33.091" endtime="20200112 21:58:33.326"></status>
</kw>
<kw name="When checking status code" library="ResourceUser">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:58:33.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:58:33.327" endtime="20200112 21:58:33.328"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:33.326" endtime="20200112 21:58:33.329"></status>
</kw>
<kw name="And check reason" library="ResourceUser">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:33.330" endtime="20200112 21:58:33.331"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:33.329" endtime="20200112 21:58:33.332"></status>
</kw>
<kw name="Then check if user has been modified correctly" library="ResourceUser">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:33.333" endtime="20200112 21:58:33.334"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>UserName</arg>
<arg>user</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:33.334" endtime="20200112 21:58:33.335"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Password</arg>
<arg>senha</arg>
</arguments>
<status status="PASS" starttime="20200112 21:58:33.335" endtime="20200112 21:58:33.336"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:33.332" endtime="20200112 21:58:33.336"></status>
</kw>
<status status="PASS" starttime="20200112 21:58:33.090" endtime="20200112 21:58:33.336" critical="yes"></status>
</test>
<doc>Documentacao da API: https://fakerestapi.azurewebsites.net/swagger/ui/index#/Users</doc>
<status status="PASS" starttime="20200112 21:58:30.692" endtime="20200112 21:58:33.338"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="APIUser">APIUser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
