<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.5 on darwin)" generated="20200112 21:14:06.754" rpa="false">
<suite id="s1" name="APIActivites" source="/Users/pedroh/Documents/TesteWebAPI-master/API/Activities/APIActivites.robot">
<kw name="Acess API Test" library="ResourceActivities" type="setup">
<kw name="Create Session" library="ExtendedRequestsLibrary">
<doc>Create and return a HTTP session object to a server.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>${URL_API}</arg>
</arguments>
<msg timestamp="20200112 21:14:07.138" level="INFO">Creating Session using : alias=apiTeste, url=https://fakerestapi.azurewebsites.net/api/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200112 21:14:07.137" endtime="20200112 21:14:07.139"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:07.137" endtime="20200112 21:14:07.139"></status>
</kw>
<test id="s1-t1" name="Scenario 1: Request to list all activities (GET)">
<kw name="Given I do a request to list all the activities" library="ResourceActivities">
<kw name="Get Request" library="ExtendedRequestsLibrary">
<doc>Send a GET request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Activities</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:14:08.112" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:14:07.141" endtime="20200112 21:14:08.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.113" level="INFO">[{"ID":1,"Title":"Activity 1","DueDate":"2020-01-13T01:14:07.9857236+00:00","Completed":false},{"ID":2,"Title":"Activity 2","DueDate":"2020-01-13T02:14:07.9857236+00:00","Completed":true},{"ID":3,"Title":"Activity 3","DueDate":"2020-01-13T03:14:07.9857236+00:00","Completed":false},{"ID":4,"Title":"Activity 4","DueDate":"2020-01-13T04:14:07.9857236+00:00","Completed":true},{"ID":5,"Title":"Activity 5","DueDate":"2020-01-13T05:14:07.9857236+00:00","Completed":false},{"ID":6,"Title":"Activity 6","DueDate":"2020-01-13T06:14:07.9857236+00:00","Completed":true},{"ID":7,"Title":"Activity 7","DueDate":"2020-01-13T07:14:07.9857236+00:00","Completed":false},{"ID":8,"Title":"Activity 8","DueDate":"2020-01-13T08:14:07.9857236+00:00","Completed":true},{"ID":9,"Title":"Activity 9","DueDate":"2020-01-13T09:14:07.9857236+00:00","Completed":false},{"ID":10,"Title":"Activity 10","DueDate":"2020-01-13T10:14:07.9857236+00:00","Completed":true},{"ID":11,"Title":"Activity 11","DueDate":"2020-01-13T11:14:07.9857236+00:00","Completed":false},{"ID":12,"Title":"Activity 12","DueDate":"2020-01-13T12:14:07.9857236+00:00","Completed":true},{"ID":13,"Title":"Activity 13","DueDate":"2020-01-13T13:14:07.9857236+00:00","Completed":false},{"ID":14,"Title":"Activity 14","DueDate":"2020-01-13T14:14:07.9857236+00:00","Completed":true},{"ID":15,"Title":"Activity 15","DueDate":"2020-01-13T15:14:07.9857236+00:00","Completed":false},{"ID":16,"Title":"Activity 16","DueDate":"2020-01-13T16:14:07.9857236+00:00","Completed":true},{"ID":17,"Title":"Activity 17","DueDate":"2020-01-13T17:14:07.9857236+00:00","Completed":false},{"ID":18,"Title":"Activity 18","DueDate":"2020-01-13T18:14:07.9857236+00:00","Completed":true},{"ID":19,"Title":"Activity 19","DueDate":"2020-01-13T19:14:07.9857236+00:00","Completed":false},{"ID":20,"Title":"Activity 20","DueDate":"2020-01-13T20:14:07.9857236+00:00","Completed":true},{"ID":21,"Title":"Activity 21","DueDate":"2020-01-13T21:14:07.9857236+00:00","Completed":false},{"ID":22,"Title":"Activity 22","DueDate":"2020-01-13T22:14:07.9857236+00:00","Completed":true},{"ID":23,"Title":"Activity 23","DueDate":"2020-01-13T23:14:07.9857236+00:00","Completed":false},{"ID":24,"Title":"Activity 24","DueDate":"2020-01-14T00:14:07.9857236+00:00","Completed":true},{"ID":25,"Title":"Activity 25","DueDate":"2020-01-14T01:14:07.9857236+00:00","Completed":false},{"ID":26,"Title":"Activity 26","DueDate":"2020-01-14T02:14:07.9857236+00:00","Completed":true},{"ID":27,"Title":"Activity 27","DueDate":"2020-01-14T03:14:07.9857236+00:00","Completed":false},{"ID":28,"Title":"Activity 28","DueDate":"2020-01-14T04:14:07.9857236+00:00","Completed":true},{"ID":29,"Title":"Activity 29","DueDate":"2020-01-14T05:14:07.9857236+00:00","Completed":false},{"ID":30,"Title":"Activity 30","DueDate":"2020-01-14T06:14:07.9857236+00:00","Completed":true}]</msg>
<status status="PASS" starttime="20200112 21:14:08.113" endtime="20200112 21:14:08.113"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.114" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.114" endtime="20200112 21:14:08.114"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:07.140" endtime="20200112 21:14:08.114"></status>
</kw>
<kw name="When checking status code" library="ResourceActivities">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.116" endtime="20200112 21:14:08.117"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.115" endtime="20200112 21:14:08.117"></status>
</kw>
<kw name="And check reason" library="ResourceActivities">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:08.119" endtime="20200112 21:14:08.120"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.118" endtime="20200112 21:14:08.120"></status>
</kw>
<kw name="Then check if the request returns an activity list &quot;30&quot;" library="ResourceActivities">
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>${NUMBER_OF_ENDPOINT}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.122" level="INFO">Length is 30</msg>
<status status="PASS" starttime="20200112 21:14:08.121" endtime="20200112 21:14:08.123"></status>
</kw>
<kw name="List Should Not Contain Duplicates" library="Collections">
<doc>Fails if any element in the ``list`` is found from it more than once.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:08.123" endtime="20200112 21:14:08.124"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.120" endtime="20200112 21:14:08.124"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:07.139" endtime="20200112 21:14:08.124" critical="yes"></status>
</test>
<test id="s1-t2" name="Scenario 2: Registration of new activity (POST)">
<kw name="Given I do a registration request from a new activity" library="ResourceActivities">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>content-type=application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20200112 21:14:08.128" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20200112 21:14:08.127" endtime="20200112 21:14:08.129"></status>
</kw>
<kw name="Post Request" library="ExtendedRequestsLibrary">
<doc>Send a POST request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Activities</arg>
<arg>data={"ID": 31,"Title": "TEST ACTIVITIES","DueDate": "2019-11-10T14:09:00.204Z","Completed": true}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:14:08.361" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.129" endtime="20200112 21:14:08.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.362" level="INFO">{"ID":31,"Title":"TEST ACTIVITIES","DueDate":"2019-11-10T14:09:00.204Z","Completed":true}</msg>
<status status="PASS" starttime="20200112 21:14:08.361" endtime="20200112 21:14:08.362"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.363" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.362" endtime="20200112 21:14:08.363"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.126" endtime="20200112 21:14:08.363"></status>
</kw>
<kw name="When checking status code" library="ResourceActivities">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.365" endtime="20200112 21:14:08.366"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.363" endtime="20200112 21:14:08.366"></status>
</kw>
<kw name="And check reason" library="ResourceActivities">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:08.368" endtime="20200112 21:14:08.369"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.367" endtime="20200112 21:14:08.369"></status>
</kw>
<kw name="Then check if the activity is with all registered data" library="ResourceActivities">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>31</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:08.370" endtime="20200112 21:14:08.371"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Title</arg>
<arg>TEST ACTIVITIES</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:08.371" endtime="20200112 21:14:08.372"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()["DueDate"]}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.373" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20200112 21:14:08.372" endtime="20200112 21:14:08.373"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Completed</arg>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:08.374" endtime="20200112 21:14:08.375"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.369" endtime="20200112 21:14:08.375"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.125" endtime="20200112 21:14:08.375" critical="yes"></status>
</test>
<test id="s1-t3" name="Scenario 3: Delete a activity (DELETE)">
<kw name="Given I delete the activity &quot;10&quot;" library="ResourceActivities">
<kw name="Delete Request" library="ExtendedRequestsLibrary">
<doc>Send a DELETE request on the session object found in the cache using the given
``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Activities/${ENDPOINT_ID}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:14:08.607" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.378" endtime="20200112 21:14:08.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.608" level="INFO"></msg>
<status status="PASS" starttime="20200112 21:14:08.608" endtime="20200112 21:14:08.608"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.609" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.608" endtime="20200112 21:14:08.609"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.377" endtime="20200112 21:14:08.609"></status>
</kw>
<kw name="When checking status code" library="ResourceActivities">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.610" endtime="20200112 21:14:08.612"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.609" endtime="20200112 21:14:08.612"></status>
</kw>
<kw name="And check reason" library="ResourceActivities">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:08.613" endtime="20200112 21:14:08.614"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.613" endtime="20200112 21:14:08.615"></status>
</kw>
<kw name="Then check if the response body is empty" library="ResourceActivities">
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${RESPONSE.content}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.617" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20200112 21:14:08.616" endtime="20200112 21:14:08.617"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.615" endtime="20200112 21:14:08.618"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.376" endtime="20200112 21:14:08.618" critical="yes"></status>
</test>
<test id="s1-t4" name="Scenario 4 : Request a specific activity (GET[ID])">
<kw name="Given I do a request to return the activity &quot;20&quot;" library="ResourceActivities">
<kw name="Get Request" library="ExtendedRequestsLibrary">
<doc>Send a GET request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Activities/${ENDPOINT_DELETE}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:14:08.850" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.621" endtime="20200112 21:14:08.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.851" level="INFO">{"ID":20,"Title":"Activity 20","DueDate":"2020-01-13T20:14:08.7201284+00:00","Completed":true}</msg>
<status status="PASS" starttime="20200112 21:14:08.850" endtime="20200112 21:14:08.851"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.853" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.852" endtime="20200112 21:14:08.853"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.620" endtime="20200112 21:14:08.853"></status>
</kw>
<kw name="When checking status code" library="ResourceActivities">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.855" endtime="20200112 21:14:08.856"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.854" endtime="20200112 21:14:08.856"></status>
</kw>
<kw name="And check reason" library="ResourceActivities">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:08.858" endtime="20200112 21:14:08.859"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.857" endtime="20200112 21:14:08.859"></status>
</kw>
<kw name="Then check if the request returns all data correctly" library="ResourceActivities">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>20</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:08.860" endtime="20200112 21:14:08.861"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Title</arg>
<arg>Activity 20</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:08.861" endtime="20200112 21:14:08.862"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()["DueDate"]}</arg>
</arguments>
<msg timestamp="20200112 21:14:08.863" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20200112 21:14:08.862" endtime="20200112 21:14:08.863"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Completed</arg>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:08.864" endtime="20200112 21:14:08.865"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.859" endtime="20200112 21:14:08.865"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.619" endtime="20200112 21:14:08.865" critical="yes"></status>
</test>
<test id="s1-t5" name="Scenario 5: Update or modify activity data (PUT)">
<kw name="Given I only changed the activity &quot;1&quot;" library="ResourceActivities">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>content-type=application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20200112 21:14:08.869" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20200112 21:14:08.868" endtime="20200112 21:14:08.869"></status>
</kw>
<kw name="Post Request" library="ExtendedRequestsLibrary">
<doc>Send a POST request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Activities/${ENDPOINT_PUT}</arg>
<arg>data={"ID": 21,"Title": "TEST ACTIVITIES","DueDate": "2019-11-10T14:09:00.204Z","Completed": true}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:14:09.099" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:14:08.869" endtime="20200112 21:14:09.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:14:09.100" level="INFO">{"ID":21,"Title":"TEST ACTIVITIES","DueDate":"2019-11-10T14:09:00.204Z","Completed":true}</msg>
<status status="PASS" starttime="20200112 21:14:09.100" endtime="20200112 21:14:09.100"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:14:09.101" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:14:09.101" endtime="20200112 21:14:09.101"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.867" endtime="20200112 21:14:09.101"></status>
</kw>
<kw name="When checking status code" library="ResourceActivities">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:14:09.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:14:09.103" endtime="20200112 21:14:09.105"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:09.102" endtime="20200112 21:14:09.105"></status>
</kw>
<kw name="And check reason" library="ResourceActivities">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:09.106" endtime="20200112 21:14:09.108"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:09.105" endtime="20200112 21:14:09.108"></status>
</kw>
<kw name="Then check if activity has been modified correctly" library="ResourceActivities">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>21</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:09.109" endtime="20200112 21:14:09.110"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Title</arg>
<arg>TEST ACTIVITIES</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:09.111" endtime="20200112 21:14:09.112"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()["DueDate"]}</arg>
</arguments>
<msg timestamp="20200112 21:14:09.113" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20200112 21:14:09.112" endtime="20200112 21:14:09.113"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Completed</arg>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20200112 21:14:09.113" endtime="20200112 21:14:09.115"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:09.109" endtime="20200112 21:14:09.115"></status>
</kw>
<status status="PASS" starttime="20200112 21:14:08.866" endtime="20200112 21:14:09.116" critical="yes"></status>
</test>
<doc>Documentacao da API: https://fakerestapi.azurewebsites.net/swagger/ui/index#/Books</doc>
<status status="PASS" starttime="20200112 21:14:06.763" endtime="20200112 21:14:09.117"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="APIActivites">APIActivites</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
