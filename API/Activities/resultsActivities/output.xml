<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.5 on darwin)" generated="20191110 22:05:42.001" rpa="false">
<suite id="s1" name="TesteCiandtApiActivites" source="/Users/pedroh/Downloads/Carol/Testes/API/Activities/TesteCiandtApiActivites.robot">
<kw name="Acess API Test" library="ResourceActivities" type="setup">
<kw name="Create Session" library="ExtendedRequestsLibrary">
<doc>Create and return a HTTP session object to a server.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>${URL_API}</arg>
</arguments>
<msg timestamp="20191110 22:05:42.273" level="INFO">Creating Session using : alias=apiTeste, url=https://fakerestapi.azurewebsites.net/api/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191110 22:05:42.273" endtime="20191110 22:05:42.274"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:42.272" endtime="20191110 22:05:42.275"></status>
</kw>
<test id="s1-t1" name="Scenario 1: Request to list all activities (GET)">
<kw name="Given that I make a request to list all the activities" library="ResourceActivities">
<kw name="Get Request" library="ExtendedRequestsLibrary">
<doc>Send a GET request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Activities</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20191110 22:05:43.772" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191110 22:05:42.277" endtime="20191110 22:05:43.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20191110 22:05:43.772" level="INFO">[{"ID":1,"Title":"Activity 1","DueDate":"2019-11-11T02:05:43.6544105+00:00","Completed":false},{"ID":2,"Title":"Activity 2","DueDate":"2019-11-11T03:05:43.6544105+00:00","Completed":true},{"ID":3,"Title":"Activity 3","DueDate":"2019-11-11T04:05:43.6544105+00:00","Completed":false},{"ID":4,"Title":"Activity 4","DueDate":"2019-11-11T05:05:43.6544105+00:00","Completed":true},{"ID":5,"Title":"Activity 5","DueDate":"2019-11-11T06:05:43.6544105+00:00","Completed":false},{"ID":6,"Title":"Activity 6","DueDate":"2019-11-11T07:05:43.6544105+00:00","Completed":true},{"ID":7,"Title":"Activity 7","DueDate":"2019-11-11T08:05:43.6544105+00:00","Completed":false},{"ID":8,"Title":"Activity 8","DueDate":"2019-11-11T09:05:43.6544105+00:00","Completed":true},{"ID":9,"Title":"Activity 9","DueDate":"2019-11-11T10:05:43.6544105+00:00","Completed":false},{"ID":10,"Title":"Activity 10","DueDate":"2019-11-11T11:05:43.6544105+00:00","Completed":true},{"ID":11,"Title":"Activity 11","DueDate":"2019-11-11T12:05:43.6544105+00:00","Completed":false},{"ID":12,"Title":"Activity 12","DueDate":"2019-11-11T13:05:43.6544105+00:00","Completed":true},{"ID":13,"Title":"Activity 13","DueDate":"2019-11-11T14:05:43.6544105+00:00","Completed":false},{"ID":14,"Title":"Activity 14","DueDate":"2019-11-11T15:05:43.6544105+00:00","Completed":true},{"ID":15,"Title":"Activity 15","DueDate":"2019-11-11T16:05:43.6544105+00:00","Completed":false},{"ID":16,"Title":"Activity 16","DueDate":"2019-11-11T17:05:43.6544105+00:00","Completed":true},{"ID":17,"Title":"Activity 17","DueDate":"2019-11-11T18:05:43.6544105+00:00","Completed":false},{"ID":18,"Title":"Activity 18","DueDate":"2019-11-11T19:05:43.6544105+00:00","Completed":true},{"ID":19,"Title":"Activity 19","DueDate":"2019-11-11T20:05:43.6544105+00:00","Completed":false},{"ID":20,"Title":"Activity 20","DueDate":"2019-11-11T21:05:43.6544105+00:00","Completed":true},{"ID":21,"Title":"Activity 21","DueDate":"2019-11-11T22:05:43.6544105+00:00","Completed":false},{"ID":22,"Title":"Activity 22","DueDate":"2019-11-11T23:05:43.6544105+00:00","Completed":true},{"ID":23,"Title":"Activity 23","DueDate":"2019-11-12T00:05:43.6544105+00:00","Completed":false},{"ID":24,"Title":"Activity 24","DueDate":"2019-11-12T01:05:43.6544105+00:00","Completed":true},{"ID":25,"Title":"Activity 25","DueDate":"2019-11-12T02:05:43.6544105+00:00","Completed":false},{"ID":26,"Title":"Activity 26","DueDate":"2019-11-12T03:05:43.6544105+00:00","Completed":true},{"ID":27,"Title":"Activity 27","DueDate":"2019-11-12T04:05:43.6544105+00:00","Completed":false},{"ID":28,"Title":"Activity 28","DueDate":"2019-11-12T05:05:43.6544105+00:00","Completed":true},{"ID":29,"Title":"Activity 29","DueDate":"2019-11-12T06:05:43.6544105+00:00","Completed":false},{"ID":30,"Title":"Activity 30","DueDate":"2019-11-12T07:05:43.6544105+00:00","Completed":true}]</msg>
<status status="PASS" starttime="20191110 22:05:43.772" endtime="20191110 22:05:43.772"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20191110 22:05:43.773" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191110 22:05:43.773" endtime="20191110 22:05:43.773"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:42.276" endtime="20191110 22:05:43.773"></status>
</kw>
<kw name="When checking status code" library="ResourceActivities">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20191110 22:05:43.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191110 22:05:43.774" endtime="20191110 22:05:43.775"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:43.773" endtime="20191110 22:05:43.775"></status>
</kw>
<kw name="And check reason" library="ResourceActivities">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:43.776" endtime="20191110 22:05:43.776"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:43.775" endtime="20191110 22:05:43.776"></status>
</kw>
<kw name="Then verifies that the request returns a list of &quot;30&quot; activities" library="ResourceActivities">
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>${NUMBER_OF_ENDPOINT}</arg>
</arguments>
<msg timestamp="20191110 22:05:43.777" level="INFO">Length is 30</msg>
<status status="PASS" starttime="20191110 22:05:43.777" endtime="20191110 22:05:43.778"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:43.777" endtime="20191110 22:05:43.778"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:42.275" endtime="20191110 22:05:43.778" critical="yes"></status>
</test>
<test id="s1-t2" name="Scenario 2: Registration of new activity (POST)">
<kw name="Given that is made the registration request from a new activity" library="ResourceActivities">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>content-type=application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20191110 22:05:43.781" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20191110 22:05:43.780" endtime="20191110 22:05:43.781"></status>
</kw>
<kw name="Post Request" library="ExtendedRequestsLibrary">
<doc>Send a POST request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Activities</arg>
<arg>data={"ID": 31,"Title": "TEST ACTIVITIES","DueDate": "2019-11-10T14:09:00.204Z","Completed": true}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20191110 22:05:44.033" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191110 22:05:43.782" endtime="20191110 22:05:44.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.034" level="INFO">{"ID":31,"Title":"TEST ACTIVITIES","DueDate":"2019-11-10T14:09:00.204Z","Completed":true}</msg>
<status status="PASS" starttime="20191110 22:05:44.033" endtime="20191110 22:05:44.034"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.034" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191110 22:05:44.034" endtime="20191110 22:05:44.034"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:43.779" endtime="20191110 22:05:44.035"></status>
</kw>
<kw name="When checking status code" library="ResourceActivities">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191110 22:05:44.036" endtime="20191110 22:05:44.036"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.035" endtime="20191110 22:05:44.036"></status>
</kw>
<kw name="And check reason" library="ResourceActivities">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.037" endtime="20191110 22:05:44.038"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.037" endtime="20191110 22:05:44.038"></status>
</kw>
<kw name="Then check if the activity is with all registered data" library="ResourceActivities">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>31</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.040" endtime="20191110 22:05:44.041"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Title</arg>
<arg>TEST ACTIVITIES</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.041" endtime="20191110 22:05:44.042"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()["DueDate"]}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.043" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20191110 22:05:44.042" endtime="20191110 22:05:44.043"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Completed</arg>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.043" endtime="20191110 22:05:44.044"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.039" endtime="20191110 22:05:44.044"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:43.778" endtime="20191110 22:05:44.044" critical="yes"></status>
</test>
<test id="s1-t3" name="Scenario 3: Delete a activity (DELETE)">
<kw name="Given that I delete the activity &quot;10&quot;" library="ResourceActivities">
<kw name="Delete Request" library="ExtendedRequestsLibrary">
<doc>Send a DELETE request on the session object found in the cache using the given
``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Activities/${ENDPOINT_ID}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20191110 22:05:44.279" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191110 22:05:44.046" endtime="20191110 22:05:44.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.280" level="INFO"></msg>
<status status="PASS" starttime="20191110 22:05:44.279" endtime="20191110 22:05:44.280"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.280" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191110 22:05:44.280" endtime="20191110 22:05:44.280"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.045" endtime="20191110 22:05:44.280"></status>
</kw>
<kw name="When checking status code" library="ResourceActivities">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191110 22:05:44.281" endtime="20191110 22:05:44.282"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.281" endtime="20191110 22:05:44.282"></status>
</kw>
<kw name="And check reason" library="ResourceActivities">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.283" endtime="20191110 22:05:44.284"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.282" endtime="20191110 22:05:44.284"></status>
</kw>
<kw name="Then check if the response body is empty" library="ResourceActivities">
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${RESPONSE.content}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.286" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20191110 22:05:44.285" endtime="20191110 22:05:44.286"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.284" endtime="20191110 22:05:44.287"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.045" endtime="20191110 22:05:44.287" critical="yes"></status>
</test>
<test id="s1-t4" name="Scenario 4 : Request a specific activity (GET[ID])">
<kw name="Given that I make a request to return the activity &quot;20&quot;" library="ResourceActivities">
<kw name="Get Request" library="ExtendedRequestsLibrary">
<doc>Send a GET request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Activities/${ENDPOINT_DELETE}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20191110 22:05:44.518" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191110 22:05:44.289" endtime="20191110 22:05:44.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.519" level="INFO">{"ID":20,"Title":"Activity 20","DueDate":"2019-11-11T21:05:44.388742+00:00","Completed":true}</msg>
<status status="PASS" starttime="20191110 22:05:44.518" endtime="20191110 22:05:44.519"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.520" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191110 22:05:44.519" endtime="20191110 22:05:44.520"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.289" endtime="20191110 22:05:44.520"></status>
</kw>
<kw name="When checking status code" library="ResourceActivities">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191110 22:05:44.521" endtime="20191110 22:05:44.521"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.520" endtime="20191110 22:05:44.521"></status>
</kw>
<kw name="And check reason" library="ResourceActivities">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.522" endtime="20191110 22:05:44.523"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.522" endtime="20191110 22:05:44.523"></status>
</kw>
<kw name="Then check if the request returns all data correctly" library="ResourceActivities">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>20</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.524" endtime="20191110 22:05:44.525"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Title</arg>
<arg>Activity 20</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.525" endtime="20191110 22:05:44.526"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()["DueDate"]}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.527" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20191110 22:05:44.526" endtime="20191110 22:05:44.527"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Completed</arg>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.527" endtime="20191110 22:05:44.528"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.523" endtime="20191110 22:05:44.528"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.287" endtime="20191110 22:05:44.528" critical="yes"></status>
</test>
<test id="s1-t5" name="Scenario 5: Update or modify activity data (PUT)">
<kw name="Given that I only changed the activity &quot;1&quot;" library="ResourceActivities">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>content-type=application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20191110 22:05:44.530" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20191110 22:05:44.530" endtime="20191110 22:05:44.530"></status>
</kw>
<kw name="Post Request" library="ExtendedRequestsLibrary">
<doc>Send a POST request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>Activities/${ENDPOINT_PUT}</arg>
<arg>data={"ID": 21,"Title": "TEST ACTIVITIES","DueDate": "2019-11-10T14:09:00.204Z","Completed": true}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20191110 22:05:44.816" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191110 22:05:44.531" endtime="20191110 22:05:44.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.817" level="INFO">{"ID":21,"Title":"TEST ACTIVITIES","DueDate":"2019-11-10T14:09:00.204Z","Completed":true}</msg>
<status status="PASS" starttime="20191110 22:05:44.817" endtime="20191110 22:05:44.817"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.818" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191110 22:05:44.817" endtime="20191110 22:05:44.818"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.529" endtime="20191110 22:05:44.818"></status>
</kw>
<kw name="When checking status code" library="ResourceActivities">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191110 22:05:44.819" endtime="20191110 22:05:44.819"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.818" endtime="20191110 22:05:44.819"></status>
</kw>
<kw name="And check reason" library="ResourceActivities">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.820" endtime="20191110 22:05:44.821"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.820" endtime="20191110 22:05:44.821"></status>
</kw>
<kw name="Then check if activity has been modified correctly" library="ResourceActivities">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>21</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.822" endtime="20191110 22:05:44.822"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Title</arg>
<arg>TEST ACTIVITIES</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.822" endtime="20191110 22:05:44.823"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()["DueDate"]}</arg>
</arguments>
<msg timestamp="20191110 22:05:44.823" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20191110 22:05:44.823" endtime="20191110 22:05:44.823"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Completed</arg>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20191110 22:05:44.824" endtime="20191110 22:05:44.824"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.821" endtime="20191110 22:05:44.824"></status>
</kw>
<status status="PASS" starttime="20191110 22:05:44.529" endtime="20191110 22:05:44.825" critical="yes"></status>
</test>
<doc>Documentacao da API: https://fakerestapi.azurewebsites.net/swagger/ui/index#/Books</doc>
<status status="PASS" starttime="20191110 22:05:42.009" endtime="20191110 22:05:44.826"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="TesteCiandtApiActivites">TesteCiandtApiActivites</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
