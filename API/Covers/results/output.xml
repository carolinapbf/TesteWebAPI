<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.5 on darwin)" generated="20200112 21:54:38.965" rpa="false">
<suite id="s1" name="APICoverPhotos" source="/Users/pedroh/Documents/TesteWebAPI-master/API/Covers/APICoverPhotos.robot">
<kw name="Acess API Test" library="ResourceCoverPhotos" type="setup">
<kw name="Create Session" library="ExtendedRequestsLibrary">
<doc>Create and return a HTTP session object to a server.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>${URL_API}</arg>
</arguments>
<msg timestamp="20200112 21:54:39.285" level="INFO">Creating Session using : alias=apiTeste, url=https://fakerestapi.azurewebsites.net/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200112 21:54:39.284" endtime="20200112 21:54:39.286"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:39.283" endtime="20200112 21:54:39.286"></status>
</kw>
<test id="s1-t1" name="Scenario 1 : Scenario 1: Request all authors that have the same IdBook (GET (ID))">
<kw name="Given I request all cover photos whose IdBook is &quot;50&quot;" library="ResourceCoverPhotos">
<kw name="Get Request" library="ExtendedRequestsLibrary">
<doc>Send a GET request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>books/covers/${ENDPOINT_IDBook}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:54:40.548" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:39.290" endtime="20200112 21:54:40.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:54:40.549" level="INFO">[{"ID":50,"IDBook":50,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 50&amp;w=250&amp;h=350"}]</msg>
<status status="PASS" starttime="20200112 21:54:40.548" endtime="20200112 21:54:40.550"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:54:40.551" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:40.550" endtime="20200112 21:54:40.551"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:39.289" endtime="20200112 21:54:40.551"></status>
</kw>
<kw name="When the status code is checked" library="ResourceCoverPhotos">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:54:40.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:54:40.553" endtime="20200112 21:54:40.554"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.552" endtime="20200112 21:54:40.554"></status>
</kw>
<kw name="And check if the reason is" library="ResourceCoverPhotos">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:40.556" endtime="20200112 21:54:40.557"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.555" endtime="20200112 21:54:40.558"></status>
</kw>
<kw name="Then check if a request returned a list with the indicated book" library="ResourceCoverPhotos">
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${SIZE}</var>
</assign>
<msg timestamp="20200112 21:54:40.560" level="INFO">Length is 1</msg>
<msg timestamp="20200112 21:54:40.560" level="INFO">${SIZE} = 1</msg>
<status status="PASS" starttime="20200112 21:54:40.559" endtime="20200112 21:54:40.560"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20200112 21:54:40.561" level="INFO">List has one item:
{'ID': 50, 'IDBook': 50, 'Url': 'https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 50&amp;w=250&amp;h=350'}</msg>
<status status="PASS" starttime="20200112 21:54:40.560" endtime="20200112 21:54:40.561"></status>
</kw>
<kw name="${COUNT} IN RANGE [ 0 | ${SIZE} ]" type="for">
<kw name="${COUNT} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>${COUNT}</arg>
</arguments>
<assign>
<var>${DIC}</var>
</assign>
<msg timestamp="20200112 21:54:40.564" level="INFO">${DIC} = {'ID': 50, 'IDBook': 50, 'Url': 'https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 50&amp;w=250&amp;h=350'}</msg>
<status status="PASS" starttime="20200112 21:54:40.563" endtime="20200112 21:54:40.564"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${DIC}</arg>
<arg>IDBook</arg>
<arg>50</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:40.564" endtime="20200112 21:54:40.565"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${COUNT} == ${SIZE}</arg>
<arg>Log</arg>
<arg>LOOP CLOSED</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:40.565" endtime="20200112 21:54:40.566"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.562" endtime="20200112 21:54:40.566"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.561" endtime="20200112 21:54:40.566"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.558" endtime="20200112 21:54:40.567"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:39.286" endtime="20200112 21:54:40.567" critical="yes"></status>
</test>
<test id="s1-t2" name="Scenario 2: Request from All Available Authors (GET)">
<kw name="Given I do a request to return the cover photos" library="ResourceCoverPhotos">
<kw name="Get Request" library="ExtendedRequestsLibrary">
<doc>Send a GET request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>api/CoverPhotos</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:54:40.827" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:40.570" endtime="20200112 21:54:40.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:54:40.828" level="INFO">[{"ID":1,"IDBook":1,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 1&amp;w=250&amp;h=350"},{"ID":2,"IDBook":2,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 2&amp;w=250&amp;h=350"},{"ID":3,"IDBook":3,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 3&amp;w=250&amp;h=350"},{"ID":4,"IDBook":4,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 4&amp;w=250&amp;h=350"},{"ID":5,"IDBook":5,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 5&amp;w=250&amp;h=350"},{"ID":6,"IDBook":6,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 6&amp;w=250&amp;h=350"},{"ID":7,"IDBook":7,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 7&amp;w=250&amp;h=350"},{"ID":8,"IDBook":8,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 8&amp;w=250&amp;h=350"},{"ID":9,"IDBook":9,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 9&amp;w=250&amp;h=350"},{"ID":10,"IDBook":10,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 10&amp;w=250&amp;h=350"},{"ID":11,"IDBook":11,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 11&amp;w=250&amp;h=350"},{"ID":12,"IDBook":12,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 12&amp;w=250&amp;h=350"},{"ID":13,"IDBook":13,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 13&amp;w=250&amp;h=350"},{"ID":14,"IDBook":14,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 14&amp;w=250&amp;h=350"},{"ID":15,"IDBook":15,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 15&amp;w=250&amp;h=350"},{"ID":16,"IDBook":16,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 16&amp;w=250&amp;h=350"},{"ID":17,"IDBook":17,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 17&amp;w=250&amp;h=350"},{"ID":18,"IDBook":18,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 18&amp;w=250&amp;h=350"},{"ID":19,"IDBook":19,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 19&amp;w=250&amp;h=350"},{"ID":20,"IDBook":20,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 20&amp;w=250&amp;h=350"},{"ID":21,"IDBook":21,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 21&amp;w=250&amp;h=350"},{"ID":22,"IDBook":22,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 22&amp;w=250&amp;h=350"},{"ID":23,"IDBook":23,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 23&amp;w=250&amp;h=350"},{"ID":24,"IDBook":24,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 24&amp;w=250&amp;h=350"},{"ID":25,"IDBook":25,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 25&amp;w=250&amp;h=350"},{"ID":26,"IDBook":26,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 26&amp;w=250&amp;h=350"},{"ID":27,"IDBook":27,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 27&amp;w=250&amp;h=350"},{"ID":28,"IDBook":28,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 28&amp;w=250&amp;h=350"},{"ID":29,"IDBook":29,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 29&amp;w=250&amp;h=350"},{"ID":30,"IDBook":30,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 30&amp;w=250&amp;h=350"},{"ID":31,"IDBook":31,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 31&amp;w=250&amp;h=350"},{"ID":32,"IDBook":32,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 32&amp;w=250&amp;h=350"},{"ID":33,"IDBook":33,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 33&amp;w=250&amp;h=350"},{"ID":34,"IDBook":34,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 34&amp;w=250&amp;h=350"},{"ID":35,"IDBook":35,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 35&amp;w=250&amp;h=350"},{"ID":36,"IDBook":36,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 36&amp;w=250&amp;h=350"},{"ID":37,"IDBook":37,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 37&amp;w=250&amp;h=350"},{"ID":38,"IDBook":38,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 38&amp;w=250&amp;h=350"},{"ID":39,"IDBook":39,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 39&amp;w=250&amp;h=350"},{"ID":40,"IDBook":40,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 40&amp;w=250&amp;h=350"},{"ID":41,"IDBook":41,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 41&amp;w=250&amp;h=350"},{"ID":42,"IDBook":42,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 42&amp;w=250&amp;h=350"},{"ID":43,"IDBook":43,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 43&amp;w=250&amp;h=350"},{"ID":44,"IDBook":44,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 44&amp;w=250&amp;h=350"},{"ID":45,"IDBook":45,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 45&amp;w=250&amp;h=350"},{"ID":46,"IDBook":46,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 46&amp;w=250&amp;h=350"},{"ID":47,"IDBook":47,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 47&amp;w=250&amp;h=350"},{"ID":48,"IDBook":48,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 48&amp;w=250&amp;h=350"},{"ID":49,"IDBook":49,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 49&amp;w=250&amp;h=350"},{"ID":50,"IDBook":50,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 50&amp;w=250&amp;h=350"},{"ID":51,"IDBook":51,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 51&amp;w=250&amp;h=350"},{"ID":52,"IDBook":52,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 52&amp;w=250&amp;h=350"},{"ID":53,"IDBook":53,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 53&amp;w=250&amp;h=350"},{"ID":54,"IDBook":54,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 54&amp;w=250&amp;h=350"},{"ID":55,"IDBook":55,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 55&amp;w=250&amp;h=350"},{"ID":56,"IDBook":56,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 56&amp;w=250&amp;h=350"},{"ID":57,"IDBook":57,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 57&amp;w=250&amp;h=350"},{"ID":58,"IDBook":58,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 58&amp;w=250&amp;h=350"},{"ID":59,"IDBook":59,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 59&amp;w=250&amp;h=350"},{"ID":60,"IDBook":60,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 60&amp;w=250&amp;h=350"},{"ID":61,"IDBook":61,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 61&amp;w=250&amp;h=350"},{"ID":62,"IDBook":62,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 62&amp;w=250&amp;h=350"},{"ID":63,"IDBook":63,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 63&amp;w=250&amp;h=350"},{"ID":64,"IDBook":64,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 64&amp;w=250&amp;h=350"},{"ID":65,"IDBook":65,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 65&amp;w=250&amp;h=350"},{"ID":66,"IDBook":66,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 66&amp;w=250&amp;h=350"},{"ID":67,"IDBook":67,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 67&amp;w=250&amp;h=350"},{"ID":68,"IDBook":68,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 68&amp;w=250&amp;h=350"},{"ID":69,"IDBook":69,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 69&amp;w=250&amp;h=350"},{"ID":70,"IDBook":70,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 70&amp;w=250&amp;h=350"},{"ID":71,"IDBook":71,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 71&amp;w=250&amp;h=350"},{"ID":72,"IDBook":72,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 72&amp;w=250&amp;h=350"},{"ID":73,"IDBook":73,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 73&amp;w=250&amp;h=350"},{"ID":74,"IDBook":74,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 74&amp;w=250&amp;h=350"},{"ID":75,"IDBook":75,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 75&amp;w=250&amp;h=350"},{"ID":76,"IDBook":76,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 76&amp;w=250&amp;h=350"},{"ID":77,"IDBook":77,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 77&amp;w=250&amp;h=350"},{"ID":78,"IDBook":78,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 78&amp;w=250&amp;h=350"},{"ID":79,"IDBook":79,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 79&amp;w=250&amp;h=350"},{"ID":80,"IDBook":80,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 80&amp;w=250&amp;h=350"},{"ID":81,"IDBook":81,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 81&amp;w=250&amp;h=350"},{"ID":82,"IDBook":82,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 82&amp;w=250&amp;h=350"},{"ID":83,"IDBook":83,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 83&amp;w=250&amp;h=350"},{"ID":84,"IDBook":84,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 84&amp;w=250&amp;h=350"},{"ID":85,"IDBook":85,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 85&amp;w=250&amp;h=350"},{"ID":86,"IDBook":86,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 86&amp;w=250&amp;h=350"},{"ID":87,"IDBook":87,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 87&amp;w=250&amp;h=350"},{"ID":88,"IDBook":88,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 88&amp;w=250&amp;h=350"},{"ID":89,"IDBook":89,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 89&amp;w=250&amp;h=350"},{"ID":90,"IDBook":90,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 90&amp;w=250&amp;h=350"},{"ID":91,"IDBook":91,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 91&amp;w=250&amp;h=350"},{"ID":92,"IDBook":92,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 92&amp;w=250&amp;h=350"},{"ID":93,"IDBook":93,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 93&amp;w=250&amp;h=350"},{"ID":94,"IDBook":94,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 94&amp;w=250&amp;h=350"},{"ID":95,"IDBook":95,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 95&amp;w=250&amp;h=350"},{"ID":96,"IDBook":96,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 96&amp;w=250&amp;h=350"},{"ID":97,"IDBook":97,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 97&amp;w=250&amp;h=350"},{"ID":98,"IDBook":98,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 98&amp;w=250&amp;h=350"},{"ID":99,"IDBook":99,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 99&amp;w=250&amp;h=350"},{"ID":100,"IDBook":100,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 100&amp;w=250&amp;h=350"},{"ID":101,"IDBook":101,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 101&amp;w=250&amp;h=350"},{"ID":102,"IDBook":102,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 102&amp;w=250&amp;h=350"},{"ID":103,"IDBook":103,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 103&amp;w=250&amp;h=350"},{"ID":104,"IDBook":104,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 104&amp;w=250&amp;h=350"},{"ID":105,"IDBook":105,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 105&amp;w=250&amp;h=350"},{"ID":106,"IDBook":106,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 106&amp;w=250&amp;h=350"},{"ID":107,"IDBook":107,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 107&amp;w=250&amp;h=350"},{"ID":108,"IDBook":108,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 108&amp;w=250&amp;h=350"},{"ID":109,"IDBook":109,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 109&amp;w=250&amp;h=350"},{"ID":110,"IDBook":110,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 110&amp;w=250&amp;h=350"},{"ID":111,"IDBook":111,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 111&amp;w=250&amp;h=350"},{"ID":112,"IDBook":112,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 112&amp;w=250&amp;h=350"},{"ID":113,"IDBook":113,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 113&amp;w=250&amp;h=350"},{"ID":114,"IDBook":114,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 114&amp;w=250&amp;h=350"},{"ID":115,"IDBook":115,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 115&amp;w=250&amp;h=350"},{"ID":116,"IDBook":116,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 116&amp;w=250&amp;h=350"},{"ID":117,"IDBook":117,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 117&amp;w=250&amp;h=350"},{"ID":118,"IDBook":118,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 118&amp;w=250&amp;h=350"},{"ID":119,"IDBook":119,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 119&amp;w=250&amp;h=350"},{"ID":120,"IDBook":120,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 120&amp;w=250&amp;h=350"},{"ID":121,"IDBook":121,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 121&amp;w=250&amp;h=350"},{"ID":122,"IDBook":122,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 122&amp;w=250&amp;h=350"},{"ID":123,"IDBook":123,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 123&amp;w=250&amp;h=350"},{"ID":124,"IDBook":124,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 124&amp;w=250&amp;h=350"},{"ID":125,"IDBook":125,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 125&amp;w=250&amp;h=350"},{"ID":126,"IDBook":126,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 126&amp;w=250&amp;h=350"},{"ID":127,"IDBook":127,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 127&amp;w=250&amp;h=350"},{"ID":128,"IDBook":128,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 128&amp;w=250&amp;h=350"},{"ID":129,"IDBook":129,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 129&amp;w=250&amp;h=350"},{"ID":130,"IDBook":130,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 130&amp;w=250&amp;h=350"},{"ID":131,"IDBook":131,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 131&amp;w=250&amp;h=350"},{"ID":132,"IDBook":132,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 132&amp;w=250&amp;h=350"},{"ID":133,"IDBook":133,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 133&amp;w=250&amp;h=350"},{"ID":134,"IDBook":134,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 134&amp;w=250&amp;h=350"},{"ID":135,"IDBook":135,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 135&amp;w=250&amp;h=350"},{"ID":136,"IDBook":136,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 136&amp;w=250&amp;h=350"},{"ID":137,"IDBook":137,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 137&amp;w=250&amp;h=350"},{"ID":138,"IDBook":138,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 138&amp;w=250&amp;h=350"},{"ID":139,"IDBook":139,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 139&amp;w=250&amp;h=350"},{"ID":140,"IDBook":140,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 140&amp;w=250&amp;h=350"},{"ID":141,"IDBook":141,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 141&amp;w=250&amp;h=350"},{"ID":142,"IDBook":142,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 142&amp;w=250&amp;h=350"},{"ID":143,"IDBook":143,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 143&amp;w=250&amp;h=350"},{"ID":144,"IDBook":144,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 144&amp;w=250&amp;h=350"},{"ID":145,"IDBook":145,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 145&amp;w=250&amp;h=350"},{"ID":146,"IDBook":146,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 146&amp;w=250&amp;h=350"},{"ID":147,"IDBook":147,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 147&amp;w=250&amp;h=350"},{"ID":148,"IDBook":148,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 148&amp;w=250&amp;h=350"},{"ID":149,"IDBook":149,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 149&amp;w=250&amp;h=350"},{"ID":150,"IDBook":150,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 150&amp;w=250&amp;h=350"},{"ID":151,"IDBook":151,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 151&amp;w=250&amp;h=350"},{"ID":152,"IDBook":152,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 152&amp;w=250&amp;h=350"},{"ID":153,"IDBook":153,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 153&amp;w=250&amp;h=350"},{"ID":154,"IDBook":154,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 154&amp;w=250&amp;h=350"},{"ID":155,"IDBook":155,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 155&amp;w=250&amp;h=350"},{"ID":156,"IDBook":156,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 156&amp;w=250&amp;h=350"},{"ID":157,"IDBook":157,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 157&amp;w=250&amp;h=350"},{"ID":158,"IDBook":158,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 158&amp;w=250&amp;h=350"},{"ID":159,"IDBook":159,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 159&amp;w=250&amp;h=350"},{"ID":160,"IDBook":160,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 160&amp;w=250&amp;h=350"},{"ID":161,"IDBook":161,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 161&amp;w=250&amp;h=350"},{"ID":162,"IDBook":162,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 162&amp;w=250&amp;h=350"},{"ID":163,"IDBook":163,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 163&amp;w=250&amp;h=350"},{"ID":164,"IDBook":164,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 164&amp;w=250&amp;h=350"},{"ID":165,"IDBook":165,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 165&amp;w=250&amp;h=350"},{"ID":166,"IDBook":166,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 166&amp;w=250&amp;h=350"},{"ID":167,"IDBook":167,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 167&amp;w=250&amp;h=350"},{"ID":168,"IDBook":168,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 168&amp;w=250&amp;h=350"},{"ID":169,"IDBook":169,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 169&amp;w=250&amp;h=350"},{"ID":170,"IDBook":170,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 170&amp;w=250&amp;h=350"},{"ID":171,"IDBook":171,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 171&amp;w=250&amp;h=350"},{"ID":172,"IDBook":172,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 172&amp;w=250&amp;h=350"},{"ID":173,"IDBook":173,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 173&amp;w=250&amp;h=350"},{"ID":174,"IDBook":174,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 174&amp;w=250&amp;h=350"},{"ID":175,"IDBook":175,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 175&amp;w=250&amp;h=350"},{"ID":176,"IDBook":176,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 176&amp;w=250&amp;h=350"},{"ID":177,"IDBook":177,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 177&amp;w=250&amp;h=350"},{"ID":178,"IDBook":178,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 178&amp;w=250&amp;h=350"},{"ID":179,"IDBook":179,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 179&amp;w=250&amp;h=350"},{"ID":180,"IDBook":180,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 180&amp;w=250&amp;h=350"},{"ID":181,"IDBook":181,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 181&amp;w=250&amp;h=350"},{"ID":182,"IDBook":182,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 182&amp;w=250&amp;h=350"},{"ID":183,"IDBook":183,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 183&amp;w=250&amp;h=350"},{"ID":184,"IDBook":184,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 184&amp;w=250&amp;h=350"},{"ID":185,"IDBook":185,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 185&amp;w=250&amp;h=350"},{"ID":186,"IDBook":186,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 186&amp;w=250&amp;h=350"},{"ID":187,"IDBook":187,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 187&amp;w=250&amp;h=350"},{"ID":188,"IDBook":188,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 188&amp;w=250&amp;h=350"},{"ID":189,"IDBook":189,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 189&amp;w=250&amp;h=350"},{"ID":190,"IDBook":190,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 190&amp;w=250&amp;h=350"},{"ID":191,"IDBook":191,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 191&amp;w=250&amp;h=350"},{"ID":192,"IDBook":192,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 192&amp;w=250&amp;h=350"},{"ID":193,"IDBook":193,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 193&amp;w=250&amp;h=350"},{"ID":194,"IDBook":194,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 194&amp;w=250&amp;h=350"},{"ID":195,"IDBook":195,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 195&amp;w=250&amp;h=350"},{"ID":196,"IDBook":196,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 196&amp;w=250&amp;h=350"},{"ID":197,"IDBook":197,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 197&amp;w=250&amp;h=350"},{"ID":198,"IDBook":198,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 198&amp;w=250&amp;h=350"},{"ID":199,"IDBook":199,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 199&amp;w=250&amp;h=350"},{"ID":200,"IDBook":200,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 200&amp;w=250&amp;h=350"}]</msg>
<status status="PASS" starttime="20200112 21:54:40.828" endtime="20200112 21:54:40.829"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:54:40.829" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:40.829" endtime="20200112 21:54:40.829"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.569" endtime="20200112 21:54:40.829"></status>
</kw>
<kw name="When the status code is checked" library="ResourceCoverPhotos">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:54:40.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:54:40.831" endtime="20200112 21:54:40.832"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.830" endtime="20200112 21:54:40.832"></status>
</kw>
<kw name="And check if the reason is" library="ResourceCoverPhotos">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:40.833" endtime="20200112 21:54:40.834"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.832" endtime="20200112 21:54:40.835"></status>
</kw>
<kw name="Then the request returns me how many cover photos are available." library="ResourceCoverPhotos">
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${AMOUNT_OF_COVER}</var>
</assign>
<msg timestamp="20200112 21:54:40.837" level="INFO">Length is 200</msg>
<msg timestamp="20200112 21:54:40.837" level="INFO">${AMOUNT_OF_COVER} = 200</msg>
<status status="PASS" starttime="20200112 21:54:40.836" endtime="20200112 21:54:40.837"></status>
</kw>
<kw name="List Should Not Contain Duplicates" library="Collections">
<doc>Fails if any element in the ``list`` is found from it more than once.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:40.838" endtime="20200112 21:54:40.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AMOUNT_OF_COVER}cover photo records returned, no record repeated</arg>
</arguments>
<msg timestamp="20200112 21:54:40.844" level="INFO">200cover photo records returned, no record repeated</msg>
<status status="PASS" starttime="20200112 21:54:40.843" endtime="20200112 21:54:40.844"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.835" endtime="20200112 21:54:40.844"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.568" endtime="20200112 21:54:40.846" critical="yes"></status>
</test>
<test id="s1-t3" name="Scenario 3: Requirement to Register a New Author (POST)">
<kw name="Given I do request to register one on the cover photo" library="ResourceCoverPhotos">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>content-type=application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20200112 21:54:40.851" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20200112 21:54:40.850" endtime="20200112 21:54:40.852"></status>
</kw>
<kw name="Post Request" library="ExtendedRequestsLibrary">
<doc>Send a POST request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>api/CoverPhotos</arg>
<arg>data={"ID":250,"IDBook":150,"Url":"https://placeholdit.imgix.net/TESTE"}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:54:41.081" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:40.852" endtime="20200112 21:54:41.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.081" level="INFO">{"ID":250,"IDBook":150,"Url":"https://placeholdit.imgix.net/TESTE"}</msg>
<status status="PASS" starttime="20200112 21:54:41.081" endtime="20200112 21:54:41.081"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.082" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:41.082" endtime="20200112 21:54:41.082"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.849" endtime="20200112 21:54:41.082"></status>
</kw>
<kw name="When the status code is checked" library="ResourceCoverPhotos">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:54:41.083" endtime="20200112 21:54:41.084"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.082" endtime="20200112 21:54:41.085"></status>
</kw>
<kw name="And check if the reason is" library="ResourceCoverPhotos">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.086" endtime="20200112 21:54:41.087"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.085" endtime="20200112 21:54:41.087"></status>
</kw>
<kw name="Then check if the cover photo was registered correctly" library="ResourceCoverPhotos">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>250</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.088" endtime="20200112 21:54:41.089"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>IDBook</arg>
<arg>150</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.090" endtime="20200112 21:54:41.090"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Url</arg>
<arg>https://placeholdit.imgix.net/TESTE</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.091" endtime="20200112 21:54:41.091"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.088" endtime="20200112 21:54:41.092"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:40.847" endtime="20200112 21:54:41.092" critical="yes"></status>
</test>
<test id="s1-t4" name="Scenario 4:Requirement to delete a specific author's resume (DELETE)">
<kw name="Given the request is made to delete the cover photo &quot;100&quot;" library="ResourceCoverPhotos">
<kw name="Delete Request" library="ExtendedRequestsLibrary">
<doc>Send a DELETE request on the session object found in the cache using the given
``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>api/CoverPhotos/${ENDPOINT_ID}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:54:41.326" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:41.095" endtime="20200112 21:54:41.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.328" level="INFO"></msg>
<status status="PASS" starttime="20200112 21:54:41.327" endtime="20200112 21:54:41.328"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.329" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:41.328" endtime="20200112 21:54:41.329"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.094" endtime="20200112 21:54:41.330"></status>
</kw>
<kw name="When the status code is checked" library="ResourceCoverPhotos">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:54:41.331" endtime="20200112 21:54:41.333"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.330" endtime="20200112 21:54:41.333"></status>
</kw>
<kw name="And check if the reason is" library="ResourceCoverPhotos">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.334" endtime="20200112 21:54:41.335"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.333" endtime="20200112 21:54:41.336"></status>
</kw>
<kw name="Then check if the respose body returned empty" library="ResourceCoverPhotos">
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${RESPONSE.content}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.338" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20200112 21:54:41.337" endtime="20200112 21:54:41.338"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.336" endtime="20200112 21:54:41.338"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.093" endtime="20200112 21:54:41.339" critical="yes"></status>
</test>
<test id="s1-t5" name="Scenario 5: Request a specific author (GET(ID))">
<kw name="Given I request the return of the cover photo &quot;40&quot;" library="ResourceCoverPhotos">
<kw name="Get Request" library="ExtendedRequestsLibrary">
<doc>Send a GET request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>api/CoverPhotos/${ENDPOINT_ID}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:54:41.584" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:41.342" endtime="20200112 21:54:41.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.585" level="INFO">{"ID":40,"IDBook":40,"Url":"https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 40&amp;w=250&amp;h=350"}</msg>
<status status="PASS" starttime="20200112 21:54:41.584" endtime="20200112 21:54:41.585"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.586" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:41.585" endtime="20200112 21:54:41.586"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.341" endtime="20200112 21:54:41.587"></status>
</kw>
<kw name="When the status code is checked" library="ResourceCoverPhotos">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:54:41.589" endtime="20200112 21:54:41.590"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.587" endtime="20200112 21:54:41.590"></status>
</kw>
<kw name="And check if the reason is" library="ResourceCoverPhotos">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.591" endtime="20200112 21:54:41.592"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.590" endtime="20200112 21:54:41.593"></status>
</kw>
<kw name="Then check if the request returned the cover photo data correctly" library="ResourceCoverPhotos">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>40</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.594" endtime="20200112 21:54:41.595"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>IDBook</arg>
<arg>40</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.595" endtime="20200112 21:54:41.596"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Url</arg>
<arg>https://placeholdit.imgix.net/~text?txtsize=33&amp;txt=Book 40&amp;w=250&amp;h=350</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.596" endtime="20200112 21:54:41.597"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.593" endtime="20200112 21:54:41.598"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.339" endtime="20200112 21:54:41.598" critical="yes"></status>
</test>
<test id="s1-t6" name="Scenario 6: Requirement to update or modify specific author data (PUT)">
<kw name="Given I do request to change the cover photo data &quot;50&quot;" library="ResourceCoverPhotos">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>content-type=application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20200112 21:54:41.602" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20200112 21:54:41.601" endtime="20200112 21:54:41.602"></status>
</kw>
<kw name="Post Request" library="ExtendedRequestsLibrary">
<doc>Send a POST request on the session object found in the cache using the given ``label``.</doc>
<arguments>
<arg>apiTeste</arg>
<arg>api/CoverPhotos/${ENDPOINT_PUT}</arg>
<arg>data={"ID":550,"IDBook":150,"Url":"https://placeholdit.imgix.net/TESTE"}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20200112 21:54:41.839" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:41.602" endtime="20200112 21:54:41.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.840" level="INFO">{"ID":550,"IDBook":150,"Url":"https://placeholdit.imgix.net/TESTE"}</msg>
<status status="PASS" starttime="20200112 21:54:41.839" endtime="20200112 21:54:41.840"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.841" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200112 21:54:41.840" endtime="20200112 21:54:41.841"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.600" endtime="20200112 21:54:41.841"></status>
</kw>
<kw name="When the status code is checked" library="ResourceCoverPhotos">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUSCODE_REQUEST}</arg>
</arguments>
<msg timestamp="20200112 21:54:41.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200112 21:54:41.842" endtime="20200112 21:54:41.844"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.841" endtime="20200112 21:54:41.844"></status>
</kw>
<kw name="And check if the reason is" library="ResourceCoverPhotos">
<arguments>
<arg>OK</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.reason}</arg>
<arg>${REASON_SOLICITADO}</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.845" endtime="20200112 21:54:41.846"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.844" endtime="20200112 21:54:41.847"></status>
</kw>
<kw name="Then I check if the author record has been modified correctly" library="ResourceCoverPhotos">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>ID</arg>
<arg>550</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.848" endtime="20200112 21:54:41.849"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>IDBook</arg>
<arg>150</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.849" endtime="20200112 21:54:41.850"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>Url</arg>
<arg>https://placeholdit.imgix.net/TESTE</arg>
</arguments>
<status status="PASS" starttime="20200112 21:54:41.850" endtime="20200112 21:54:41.851"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.847" endtime="20200112 21:54:41.851"></status>
</kw>
<status status="PASS" starttime="20200112 21:54:41.599" endtime="20200112 21:54:41.852" critical="yes"></status>
</test>
<doc>Documentacao da API: Authors</doc>
<status status="PASS" starttime="20200112 21:54:38.974" endtime="20200112 21:54:41.853"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="APICoverPhotos">APICoverPhotos</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
